{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","value","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","keyword","split","Pagination","Array","keys","active","listProducts","listProductDetails","HomeScreen","history","location","search","useEffect","sm","md","lg","xl","ProductScreen","match","useState","qty","setQty","setRating","setComment","successProductReview","params","Image","alt","fluid","ListGroup","description","countInStock","xs","Form","Control","onChange","e","target","Button","push","disabled","addToCart","setItem","stringify","CartScreen","productId","Number","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","step3","index","createOrder","OrderScreen","loadingDeliver","Id","href","isDelivered","deliveredAt","deliverOrder","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","Check","label","checked","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01dbd9de.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ТехноШоп</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        \r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Кошик</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Профіль</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Вийти</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Увійти</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Користувачі</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Товари</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Замовлення</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Губаш Володимир © 2022 </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} відгуків`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                ₴{product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Завантаження...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Нові товари</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Назад</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} відгуків`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Ціна: ₴{product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Опис: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Ціна:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Статус:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'В наявності' : 'Немає в наявності'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Кількість</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Додати в кошик\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            \r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Кошик покупок</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Кошик порожній <Link to='/'>Назад</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Загальна вартість({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Підтвердити замовлення\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Увійти в профіль</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Електронна адреса</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Введіть email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Пароль</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Введіть пароль'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Увійти\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Новий покупець? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Створити профіль\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Паролі не співпадають')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Створити профіль</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Ім'я</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder=\"Введіть своє ім'я\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Електронна адреса</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Введіть email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Пароль</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Придумайте пароль'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Підтвердження паролю</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Введіть пароль ще раз'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Створити\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Уже маєте профіль? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        УВІЙТИ\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Паролі не співпадають')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Ваш профіль</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Ім'я</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder=\"Введіть ім'я\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Електронна адреса</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Введіть email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Пароль</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Введіть пароль'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Підтвердження паролю</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Введіть пароль ще раз'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Оновити\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>Мої замовлення</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>ДАТА</th>\r\n                                        <th>СУМА</th>\r\n                                        <th>ОПЛАЧЕНО</th>\r\n                                        <th>ДОСТАВЛЕНО</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Логін</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Логін</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Доставка</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Доставка</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n           \r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Підтвердити замовлення</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Підтвердити замовлення</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Доставка</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Адреса</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Введіть адресу'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>Місто</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Введіть місто'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Поштовий індекс</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Введіть поштовий індекс'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Країна</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Введіть країну'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Далі\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Доставка</h2>\r\n\r\n                            <p>\r\n                                <strong>Доставка: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        \r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Ваше замовлення</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                               Ваш кошик поки що порожній.\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Сума замовлення</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Товари:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Доставка:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            \r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Загалом:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='success'>Замовлення оформлено</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Підтвердити замовлення\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Замовлення: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Доставка</h2>\r\n                                    <p><strong>Ім'я: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Адреса: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Доставлено {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Не доставлено</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Платіжний метод</h2>\r\n                                    <p>\r\n                                        <strong>Метод: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'> Оплачено {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Не оплачено</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Замовлення</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Замовлення порожнє\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Сума замовлення</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Товари:</Col>\r\n                                            <Col>₴{order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Доставка:</Col>\r\n                                            <Col>₴{order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                   \r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Загалом:</Col>\r\n                                            <Col>₴{order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                   \r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}